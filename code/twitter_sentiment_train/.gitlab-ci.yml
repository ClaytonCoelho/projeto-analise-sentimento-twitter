stages:
  - test_before_build
  - build
  - pull_image
  - deploy
  - test_after_deploy

validate_code:
  stage: test_before_build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Test OK"
  tags:
    - docker
  only:
    - tags

vulnerability_analysis:
  stage: test_before_build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Analysis OK"
  tags:
    - docker
  only:
    - tags

build_image:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  tags:
    - docker
  only:
    - tags

pull_image_worker1:
  stage: pull_image
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker image rm -f $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG || echo "Imagem inexistente!"
    - docker image pull $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  tags:
    - k8s-worker1
  only:
    - tags
  
pull_image_worker2:
  stage: pull_image
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker image rm -f $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG || echo "Imagem inexistente!"
    - docker image pull $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  tags:
    - k8s-worker2
  only:
    - tags

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - sed -i "s~__CI_REGISTRY_IMAGE__~${CI_REGISTRY_IMAGE}~" build/manifest_app.yaml
    - sed -i "s/__VERSION__/${CI_COMMIT_TAG}/" build/manifest_app.yaml
    - sed -i "s/__AWS_ACCESS_KEY_ID__/${AWS_ACCESS_KEY_ID}/" build/manifest_app.yaml
    - sed -i "s/__AWS_SECRET_ACCESS_KEY__/${AWS_SECRET_ACCESS_KEY}/" build/manifest_app.yaml
    - docker run --rm --name kubectl -v "$PWD/build/kubeconfig:/.kube/config" -v "$PWD/build/manifest_app.yaml:/tmp/manifest_app.yaml" bitnami/kubectl:latest apply -f /tmp/manifest_app.yaml
  tags:
    - docker
  only:
    - tags

test_functional:
  stage: test_after_deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Test OK"
  tags:
    - docker
  only:
    - tags